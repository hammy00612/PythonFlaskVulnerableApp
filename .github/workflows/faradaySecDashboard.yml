name: faradaySecDashboard
on:
  push:
    branches:
      - master

jobs:
  scan1:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install tfSec
      run: |
        wget -q -O tfsec https://github.com/aquasecurity/tfsec/releases/download/v1.6.2/tfsec-linux-amd64
        chmod +x ./tfsec 
        mv ./tfsec /usr/local/bin/tfsec
    - name: Run TFSec
      run: tfsec . --format junit --out tfsec-junit.xml || true
    - name: CheckOutput
      run: |
        ls ./
        pwd
        ls -l

#  tfsec terraform/aws --format junit --out tfsec-junit.xml
#  https://about.gitlab.com/blog/2022/02/17/fantastic-infrastructure-as-code-security-attacks-and-how-to-find-them/

    - name: Upload TFSec Report
      uses: actions/upload-artifact@v2
      with:
        name: tfsec-report
        path: tfsec-junit.xml


  scan2:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install TerraScan
      run: |
        git clone git@github.com:accurics/terrascan.git
        cd terrascan
        make build
        ./bin/terrascan
        
        
        
        
    - name: Run TerraScan
      run: terrascan scan -t aws -d . --output xml > ./terrascan-results.xml
    - name: CheckOutput
      run: |
        ls ./
        pwd
        ls -l

    - name: Upload TerraScan Report
      uses: actions/upload-artifact@v2
      with:
        name: terrascan-results
        path: terrascan-results.xml

### Upload phase:
  upload:
    if: ${{ always() }}
    needs: [scan1,scan2]
    runs-on: ubuntu-latest
    container:
      image: python:3.9.1
      options: --user root -v ${{ github.workspace }}:/reports/:rw

    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Download TFSEC Report Artifact
      uses: actions/download-artifact@master
      with:
        name: tfsec-report
        path: tfsec-junit.xml

    - name: Download TerraScan Report Artifact
      uses: actions/download-artifact@master
      with:
        name: terrascan-results
        path: terrascan-results.xml


    - name: CheckOutput
      run: |
        ls ./tfsec-junit.xml
        pwd
        ls -l
        echo "____________________________________"
        cat tfsec-junit.xml/tfsec-junit.xml

        echo "_____________________________"
        ls terrascan-results.xml

###    Faraday CLI approach
    - name: Upload Reports to Faraday
      run: |
        pip install faraday-cli
        faraday-cli auth -f ${{ secrets.FARADAY_HOST }} -u ${{ secrets.FARADAY_USERNAME }} -p ${{ secrets.FARADAY_PASSWORD }}
        faraday-cli tool report -w ${{ secrets.FARADAY_WORKSPACE }} tfsec-junit.xml/tfsec-junit.xml
        faraday-cli tool report -w ${{ secrets.FARADAY_WORKSPACE }} terrascan-results.xml



